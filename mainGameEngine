# Chump's Challenge
# By Calvin Probst calvin.probst@gmail.com
# https://github.com/calvinProbstSchool/chumpschallenge

import pygame
from pygame.sprite import *
from pygame.locals import *


class ChumpPlayer(Sprite):
    def __init__(self):
        Sprite.__init__(self)

        self.image = pygame.image.load(
            "DKDonkeyKongHesTheLeaderOfTheBunchYouKnowHimWellHesFinallyBackToKickSomeTailHisCoconutGunCanFireInSpurtsIfHeShootsYaItsGonnaHurtHesBiggerFasterAndStrongerTooHesTheFirstMemberOfTheDKCrewHuh.png")
        self.rect = self.image.get_rect()


class BasicTile(Sprite):
    def __init__(self, boardX, boardY, imageFilename, tType):
        Sprite.__init__(self)

        self.image = pygame.image.load(imageFilename)
        self.rect = self.image.get_rect()

        self.bX = boardX
        self.bY = boardY

        self.tileType = tType


class BasicItem(Sprite):
    def __init__(self, boardX, boardY, imageFilename, itemType):
        Sprite.__init__(self)

        self.image = pygame.image.load(imageFilename)
        self.rect = self.image.get_rect()

        self.bX = boardX
        self.bY = boardY

        self.tileType = itemType


class WallTile(BasicTile):
    def __init__(self, boardX, boardY):
        BasicTile.__init__(self, boardX, boardY, "shesABrickHouse.png", "W")


class IceTile(BasicTile):
    def __init__(self, boardX, boardY):
        BasicTile.__init__(self, boardX, boardY, "iceIceBaby", "I")


class WaterTile(BasicTile):
    def __init__(self, boardX, boardY):
        BasicTile.__init__(self, boardX, boardY, "vvaves(Kanye).png", "w")


class DoorTile(BasicTile):
    def __init__(self, boardX, boardY, keyNumber):
        BasicTile.__init__(self, boardX, boardY, "jimMorrison.png", "D")

        self.keyNum = keyNumber


class EmptyTile(BasicTile):
    def __init__(self, boardX, boardY):
        BasicTile.__init__(self, boardX, boardY, "", "_")


class HintTile(BasicTile):
    def __init__(self, boardX, boardY):
        BasicTile.__init__(self, boardX, boardY, "hintsAreForRealChumps.png", "H")


class CrateTile(BasicTile):
    def __init__(self, boardX, boardY):
        BasicTile.__init__(self, boardX, boardY, "heartShapedBox.png", "B")


class DarkTile(BasicTile):
    def __init__(self, boardX, boardY):
        BasicTile.__init__(self, boardX, boardY, "areYouAfraidOfTheDark.png", "d")


class FireTile(BasicTile):
    def __init__(self, boardX, boardY):
        BasicTile.__init__(self, boardX, boardY, "burningFireOnTheDancefloor.png", "F")


class FireShoesItem(BasicItem):
    def __init__(self, boardX, boardY):


WINDOWSIZE = 600
TILESIZE = 80
FONTSIZE = 60
FPS = 30

WALL = "W"
WATER = "w"
ICE = "I"
DOOR = "D"
DARK = "d"
EMPTY = "_"
HINT = "H"
BOX = "B"
FIRE = "F"


GREEN = (0, 0, 128)
BLACK = (0, 0, 0)


def main():
    global FPSCLOCK, DISPLAYSURF, CHUMPFONT
    pygame.init()
    DISPLAYSURF = pygame.display.set_mode((WINDOWSIZE, WINDOWSIZE))
    pygame.display.set_caption("Chump's Challenge")
    FPSCLOCK = pygame.time.Clock()
    CHUMPFONT = pygame.font.Font("./Jumpman.ttf", FONTSIZE)


    tileBoard = getBoard(1)


def getBoard(levelNum):
    f = open(("level" + str(levelNum)), "r")
    rows = f.readlines()
    board = []
    for row in rows:
        TileRow = []
        for x in str.split(row):
            TileRow.append(x)
        board.append(TileRow)
    for x in len(board):
        for y in len(board[x]):
            board[x][y] = getTextToTile(board[x][y], x, y)


def getTextToTile(tileStr, x, y):
    if tileStr == WALL:
        return WallTile(x, y)
    elif tileStr == WATER:
        return WaterTile(x, y)
    elif tileStr == ICE:
        return IceTile(x, y)
    elif tileStr == "0" or tileStr == "1" or tileStr == "2" or tileStr == "3":
        return DoorTile(x, y, tileStr)
    elif tileStr == EMPTY:
        return EmptyTile(x, y)
    elif tileStr == :
        return Tile(x, y)
    elif tileStr == :
        return Tile(x, y)

def drawClock(new=False):
    FPSCLOCK.tick(FPS)
    timeNum = int(pygame.time.get_ticks() / 1000)
    timeStr = str(int(timeNum % 60))
    timeNum = timeNum - (timeNum % 60)
    minnum = 0
    while timeNum >= 60:
        minnum += 1
        timeNum -= 60
    if len(timeStr) == 1:
        timeStr = "0" + timeStr
    timeStr = str(minnum) + ":" + timeStr
    if new:
        timeStr = "0:00"
    timer = CHUMPFONT.render(timeStr, True, GREEN, BLACK)
    DISPLAYSURF.blit(timer, (10, 10))